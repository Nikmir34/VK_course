{
	"info": {
		"_postman_id": "00063780-b7ab-4f6a-945b-662c8db197de",
		"name": "Postman HW 2 Autotests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "#1 login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Nikita",
							"type": "text"
						},
						{
							"key": "password",
							"value": "test",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					]
				}
			},
			"response": [
				{
					"name": "#1 login",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "Nikita",
									"type": "text"
								},
								{
									"key": "password",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}login",
							"host": [
								"{{url}}login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "67"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 10:54:44 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"/s34lfgbj/Nikita/jjd909/38399kjkWpqc4479test430266evny\"\n}"
				}
			]
		},
		{
			"name": "#2 user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Проверка статус кода 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"//2. Проверка структуры Json в ответе\r",
							"let shema = {\r",
							"    \"type\" : \"object\",\r",
							"    \"required\" : [\"person\", \"qa_salary_after_12_months\", \"qa_salary_after_6_months\", \"start_qa_salary\"],\r",
							"    \"properties\": {\r",
							"        \"person\" : {\r",
							"            \"type\" : \"object\",\r",
							"            \"required\" : [\"u_age\", \"u_name\", \"u_salary_1_5_year\"],\r",
							"            \"properties\" : {\r",
							"                \"u_age\" : {\"type\" : \"integer\"},\r",
							"                \"u_name\" : {\"type\" : \"array\"},\r",
							"                \"u_salary_1_5_year\" : {\"type\" : \"integer\"}\r",
							"            }\r",
							"        },\r",
							"        \"qa_salary_after_12_months\" : {\"type\" : \"integer\"},\r",
							"        \"qa_salary_after_6_months\" : {\"type\" : \"integer\"},\r",
							"        \"start_qa_salary\" : {\"type\" : \"integer\"}\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test('JSON shema is valid', () => {pm.response.to.have.jsonSchema(shema);\r",
							"})\r",
							"\r",
							"//3. В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"let req = JSON.parse(request.data)\r",
							"let salary = parseInt(req.salary)\r",
							"\r",
							"pm.test('Check multiplier start_qa_salary', () => {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(salary)\r",
							"});\r",
							"\r",
							"pm.test('Check multiplier qa_salary_after_6_months', () => {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(salary * 2)\r",
							"});\r",
							"\r",
							"pm.test('Check multiplier qa_salary_after_12_months', () => {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(salary * 2.9)\r",
							"});\r",
							"\r",
							"pm.test('Check multiplier u_salary_1.5_year', () => {\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(salary * 4)\r",
							"});\r",
							"\r",
							"//4. Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"postman.setEnvironmentVariable(\"salary\", jsonData.person.u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": \"30\",\r\n    \"salary\": \"30000\",\r\n    \"name\": \"Nikita\",\r\n    \"auth_token\":\"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info",
					"host": [
						"{{url}}user_info"
					]
				}
			},
			"response": [
				{
					"name": "#2 user_info",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": \"30\",\r\n    \"salary\": \"30000\",\r\n    \"name\": \"Nikita\",\r\n    \"auth_token\":\"{{token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user_info",
							"host": [
								"{{url}}user_info"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "173"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 10:54:24 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"person\": {\n        \"u_age\": 30,\n        \"u_name\": [\n            \"Nikita\",\n            30000,\n            30\n        ],\n        \"u_salary_1_5_year\": 120000\n    },\n    \"qa_salary_after_12_months\": 87000,\n    \"qa_salary_after_6_months\": 60000,\n    \"start_qa_salary\": 30000\n}"
				}
			]
		},
		{
			"name": "#3 new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Проверка статус кода 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"//2. Проверка структуры Json в ответе\r",
							"let shema = {\r",
							"    \"type\" : \"object\",\r",
							"    \"required\" : [\"age\", \"name\", \"salary\"],\r",
							"    \"properties\": {\r",
							"        \"age\" : {\"type\" : \"integer\"},\r",
							"        \"name\" : {\"type\" : \"string\"},\r",
							"        \"salary\" : {\"type\" : \"array\"}\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test('JSON shema is valid', () => {pm.response.to.have.jsonSchema(shema);\r",
							"})\r",
							"\r",
							"//3. В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"let req = request.data;\r",
							"let salary =  parseInt(req.salary)\r",
							"\r",
							"pm.test('Check multiplier salary[0]', () => {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(salary)\r",
							"});\r",
							"\r",
							"pm.test('Check multiplier salary[1]', () => {\r",
							"    pm.expect(parseInt(jsonData.salary[1])).to.eql(salary * 2)\r",
							"});\r",
							"\r",
							"pm.test('Check multiplier salary[2]', () => {\r",
							"    pm.expect(parseInt(jsonData.salary[2])).to.eql(salary * 3)\r",
							"});\r",
							"\r",
							"//4. Проверить, что 2-й элемент  массива salary больше 1-го и 0-го\r",
							"pm.test('Comparing array elements salary[2]>salary[1]', () => {\r",
							"    pm.expect(parseInt(jsonData.salary[2])).to.greaterThan(parseInt(jsonData.salary[1]))\r",
							"});\r",
							"\r",
							"pm.test('Comparing array elements salary[2]>salary[0]', () => {\r",
							"    pm.expect(parseInt(jsonData.salary[2])).to.greaterThan(parseInt(jsonData.salary[0]))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "30000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Nikita",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": [
				{
					"name": "#3 new_data",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "24",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "30000",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Nikita",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "60"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 11:31:43 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": 24,\n    \"name\": \"Nikita\",\n    \"salary\": [\n        30000,\n        \"60000\",\n        \"90000\"\n    ]\n}"
				}
			]
		},
		{
			"name": "#4 test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Проверка статус кода 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"//2. Проверка структуры Json в ответе\r",
							"let shema = {\r",
							"    \"type\" : \"object\",\r",
							"    \"required\" : [\"age\", \"name\", \"daily_food\", \"daily_sleep\"],\r",
							"    \"properties\": {\r",
							"       \"age\" : {\"type\" : \"integer\"},\r",
							"       \"name\" : {\"type\" : \"string\"},\r",
							"       \"daily_food\" : {\"type\" : \"number\"},\r",
							"       \"daily_sleep\" : {\"type\" : \"number\"} \r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test('JSON shema is valid', () => {pm.response.to.have.jsonSchema(shema);\r",
							"}) \r",
							"\r",
							"//3. В ответе указаны коэффициенты умножени weight, напишите тесты по проверке правильности результата перемножения на коэффициент.                          'daily food' : weight * 0,012 , 'daily sleep' : weight * 2,5\r",
							"let req = request.data;\r",
							"let weight = parseInt(req.weight)\r",
							"\r",
							"pm.test('Check multiplier daily_food', () => {\r",
							"    pm.expect(jsonData.daily_food).to.eql(weight * 0.012)\r",
							"});\r",
							"\r",
							"pm.test('Check multiplier daily_sleep', () => {\r",
							"    pm.expect(jsonData.daily_sleep).to.eql(weight * 2.5)\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "3",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "5",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Cat",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": [
				{
					"name": "#4 test_pet_info",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "3",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "5",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Cat",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "60"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 11:58:51 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": 3,\n    \"daily_food\": 0.06,\n    \"daily_sleep\": 12.5,\n    \"name\": \"Cat\"\n}"
				}
			]
		},
		{
			"name": "#5 get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" //1. Проверка статус кода 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();   \r",
							"\r",
							"//2. Проверка структуры Json в ответе\r",
							"let shema = {\r",
							"    \"type\" : \"object\",\r",
							"    \"required\" : [\"age\", \"family\", \"name\", \"salary\"],\r",
							"    \"properties\" : {\r",
							"        \"age\" : {\"type\" : \"string\"},\r",
							"        \"family\" : {\r",
							"            \"type\" : \"object\",\r",
							"            \"required\" : [\"children\", \"u_salary_1_5_year\"],\r",
							"            \"properties\" : {\r",
							"                \"children\" : {\"type\" : \"array\"},\r",
							"                \"u_salary_1_5_year\" : {\"type\" : \"integer\"}\r",
							"            }\r",
							"        },\r",
							"        \"name\" : {\"type\" : \"string\"},\r",
							"        \"salary\" : {\"type\" : \"integer\"}\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test('JSON shema is valid', () => {pm.response.to.have.jsonSchema(shema);\r",
							"})\r",
							"\r",
							"//3. Проверить что значение поля name = значению переменной name из окружения\r",
							"let req = request.data;\r",
							"\r",
							"pm.test('Compare value name', () => {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"//4. Проверить значение поля age в ответе соответствует отправленному в запросе значению поля age \r",
							"pm.test('Compare value age', () => {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Nikita",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": [
				{
					"name": "#5 get_test_user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "24",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "30000",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Nikita",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "119"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 12:34:08 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"24\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"u_salary_1_5_year\": 120000\n    },\n    \"name\": \"Nikita\",\n    \"salary\": 30000\n}"
				}
			]
		},
		{
			"name": "#6 currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"value = jsonData[Math.floor(Math.random() * jsonData.length)];\r",
							"pm.environment.set(\"curr_code\", value.Cur_ID);\r",
							"let responseJson = pm.response.json();\r",
							"\r",
							"\r",
							"for ( let i = 0; i < responseJson.length; i++ ) { \r",
							"    \r",
							"    let currency = responseJson[i];\r",
							"    let currencyArr = Object.values(currency);\r",
							"    let currencyID = currencyArr[1];\r",
							"\r",
							"        pm.sendRequest ({\r",
							"        url: 'http://162.55.220.72:5005/curr_byn',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'multipart/form-data'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                { key: \"auth_token\", value: pm.environment.get('token'), disabled: false, description: { content: \"\", type: \"text/plain\" } },\r",
							"                { key: \"curr_code\", value: currencyID, disabled: false, description: { content: \"\", type: \"text/plain\" } }\r",
							"            ]\r",
							"        }\r",
							"    }, function (err, res)  {\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            if (statusCode == 200) {\r",
							"            let resultCurrency = res.json();\r",
							"            if ('200' !== typeof resultCurrency.Cur_OfficialRate) {\r",
							"             console.log(resultCurrency);   \r",
							"            }\r",
							"            \r",
							"        }\r",
							"    });\r",
							"\r",
							"};\r",
							"    \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": [
				{
					"name": "#6 currency",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"currency"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "39438"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 17:51:49 GMT"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"Cur_Abbreviation\": \"ALL\",\n        \"Cur_ID\": 1,\n        \"Cur_Name\": \"Албанский лек\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DZD\",\n        \"Cur_ID\": 2,\n        \"Cur_Name\": \"Алжирский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ARS\",\n        \"Cur_ID\": 5,\n        \"Cur_Name\": \"Аргентинское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BGL\",\n        \"Cur_ID\": 6,\n        \"Cur_Name\": \"Болгарский лев\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ATS\",\n        \"Cur_ID\": 7,\n        \"Cur_Name\": \"Австрийский шиллинг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BEF\",\n        \"Cur_ID\": 12,\n        \"Cur_Name\": \"Бельгийский франк\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EUR\",\n        \"Cur_ID\": 19,\n        \"Cur_Name\": \"Евро\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CAD\",\n        \"Cur_ID\": 23,\n        \"Cur_Name\": \"Канадский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LKR\",\n        \"Cur_ID\": 26,\n        \"Cur_Name\": \"Шри-Ланкийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CLP\",\n        \"Cur_ID\": 27,\n        \"Cur_Name\": \"Чилийское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CNY\",\n        \"Cur_ID\": 28,\n        \"Cur_Name\": \"Китайский юань\"\n    },\n    {\n        \"Cur_Abbreviation\": \"COP\",\n        \"Cur_ID\": 29,\n        \"Cur_Name\": \"Колумбийское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CYP\",\n        \"Cur_ID\": 35,\n        \"Cur_Name\": \"Кипрский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DKK\",\n        \"Cur_ID\": 36,\n        \"Cur_Name\": \"Датская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ETB\",\n        \"Cur_ID\": 40,\n        \"Cur_Name\": \"Эфиопский быр\"\n    },\n    {\n        \"Cur_Abbreviation\": \"FIM\",\n        \"Cur_ID\": 43,\n        \"Cur_Name\": \"Финляндская марка\"\n    },\n    {\n        \"Cur_Abbreviation\": \"FRF\",\n        \"Cur_ID\": 44,\n        \"Cur_Name\": \"Французский франк\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GEL\",\n        \"Cur_ID\": 46,\n        \"Cur_Name\": \"Грузинский лари\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GRD\",\n        \"Cur_ID\": 51,\n        \"Cur_Name\": \"Греческая драхма\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HKD\",\n        \"Cur_ID\": 57,\n        \"Cur_Name\": \"Гонконгский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ISK\",\n        \"Cur_ID\": 58,\n        \"Cur_Name\": \"Исландская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"INR\",\n        \"Cur_ID\": 59,\n        \"Cur_Name\": \"Индийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IRR\",\n        \"Cur_ID\": 61,\n        \"Cur_Name\": \"Иранский риал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IQD\",\n        \"Cur_ID\": 62,\n        \"Cur_Name\": \"Иракcкий динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IEP\",\n        \"Cur_ID\": 63,\n        \"Cur_Name\": \"Ирландский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ILS\",\n        \"Cur_ID\": 64,\n        \"Cur_Name\": \"Новый израильский шекель\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ITL\",\n        \"Cur_ID\": 65,\n        \"Cur_Name\": \"Итальянская лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JPY\",\n        \"Cur_ID\": 67,\n        \"Cur_Name\": \"Иена\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JOD\",\n        \"Cur_ID\": 68,\n        \"Cur_Name\": \"Иорданский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KES\",\n        \"Cur_ID\": 69,\n        \"Cur_Name\": \"Кенийский шиллинг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KRW\",\n        \"Cur_ID\": 71,\n        \"Cur_Name\": \"Южнокорейская вона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KWD\",\n        \"Cur_ID\": 72,\n        \"Cur_Name\": \"Кувейтский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LAK\",\n        \"Cur_ID\": 73,\n        \"Cur_Name\": \"Лаосский кип\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LBP\",\n        \"Cur_ID\": 74,\n        \"Cur_Name\": \"Ливанский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LYD\",\n        \"Cur_ID\": 77,\n        \"Cur_Name\": \"Ливийcкий динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LUF\",\n        \"Cur_ID\": 78,\n        \"Cur_Name\": \"Люксембургский франк\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MXN\",\n        \"Cur_ID\": 87,\n        \"Cur_Name\": \"Мексиканское новое песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MNT\",\n        \"Cur_ID\": 88,\n        \"Cur_Name\": \"Монгольский тугрик\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MAD\",\n        \"Cur_ID\": 89,\n        \"Cur_Name\": \"Марокканский дирхам\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NPR\",\n        \"Cur_ID\": 93,\n        \"Cur_Name\": \"Непальcкая рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NLG\",\n        \"Cur_ID\": 94,\n        \"Cur_Name\": \"Нидерландский гульден\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NZD\",\n        \"Cur_ID\": 98,\n        \"Cur_Name\": \"Новозеландский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NGN\",\n        \"Cur_ID\": 100,\n        \"Cur_Name\": \"Нигерийская найра\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NOK\",\n        \"Cur_ID\": 101,\n        \"Cur_Name\": \"Норвежская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PKR\",\n        \"Cur_ID\": 102,\n        \"Cur_Name\": \"Пакистанская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PEN\",\n        \"Cur_ID\": 106,\n        \"Cur_Name\": \"Перуанский новый соль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PHP\",\n        \"Cur_ID\": 107,\n        \"Cur_Name\": \"Филиппинcкое песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PLZ\",\n        \"Cur_ID\": 108,\n        \"Cur_Name\": \"Польский злотый\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PTE\",\n        \"Cur_ID\": 109,\n        \"Cur_Name\": \"Португальcкое эскудо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SAR\",\n        \"Cur_ID\": 116,\n        \"Cur_Name\": \"Саудовский риал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SGD\",\n        \"Cur_ID\": 119,\n        \"Cur_Name\": \"Сингапурcкий доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VND\",\n        \"Cur_ID\": 120,\n        \"Cur_Name\": \"Вьетнамский донг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SIT\",\n        \"Cur_ID\": 121,\n        \"Cur_Name\": \"Словенский толар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ZAR\",\n        \"Cur_ID\": 123,\n        \"Cur_Name\": \"Южноафриканский рэнд\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ESP\",\n        \"Cur_ID\": 125,\n        \"Cur_Name\": \"Испанская песета\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SDD\",\n        \"Cur_ID\": 126,\n        \"Cur_Name\": \"Суданский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SEK\",\n        \"Cur_ID\": 129,\n        \"Cur_Name\": \"Шведская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CHF\",\n        \"Cur_ID\": 130,\n        \"Cur_Name\": \"Швейцарский франк\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SYP\",\n        \"Cur_ID\": 131,\n        \"Cur_Name\": \"Сирийский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"THB\",\n        \"Cur_ID\": 132,\n        \"Cur_Name\": \"Таиландский бат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AED\",\n        \"Cur_ID\": 135,\n        \"Cur_Name\": \"Дирхам ОАЭ\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TND\",\n        \"Cur_ID\": 136,\n        \"Cur_Name\": \"Тунисский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TRL\",\n        \"Cur_ID\": 137,\n        \"Cur_Name\": \"Турецкая лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UAK\",\n        \"Cur_ID\": 139,\n        \"Cur_Name\": \"Украинский карбованец\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MKD\",\n        \"Cur_ID\": 140,\n        \"Cur_Name\": \"Македонский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RUR\",\n        \"Cur_ID\": 141,\n        \"Cur_Name\": \"Российский рубль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EGP\",\n        \"Cur_ID\": 142,\n        \"Cur_Name\": \"Египетский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GBP\",\n        \"Cur_ID\": 143,\n        \"Cur_Name\": \"Фунт стерлингов\"\n    },\n    {\n        \"Cur_Abbreviation\": \"USD\",\n        \"Cur_ID\": 145,\n        \"Cur_Name\": \"Доллар США\"\n    },\n    {\n        \"Cur_Abbreviation\": \"YUN\",\n        \"Cur_ID\": 150,\n        \"Cur_Name\": \"Югославский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TWD\",\n        \"Cur_ID\": 152,\n        \"Cur_Name\": \"Новый тайваньский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TJR\",\n        \"Cur_ID\": 154,\n        \"Cur_Name\": \"Таджикский рубль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UZS\",\n        \"Cur_ID\": 155,\n        \"Cur_Name\": \"Узбекский сум\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AMD\",\n        \"Cur_ID\": 156,\n        \"Cur_Name\": \"Армянский драм\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AZM\",\n        \"Cur_ID\": 157,\n        \"Cur_Name\": \"Азербайджанский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"XDR\",\n        \"Cur_ID\": 166,\n        \"Cur_Name\": \"СДР \"\n    },\n    {\n        \"Cur_Abbreviation\": \"UAH\",\n        \"Cur_ID\": 169,\n        \"Cur_Name\": \"Украинская гривна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AUD\",\n        \"Cur_ID\": 170,\n        \"Cur_Name\": \"Австралийский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CZK\",\n        \"Cur_ID\": 171,\n        \"Cur_Name\": \"Чешская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EEK\",\n        \"Cur_ID\": 172,\n        \"Cur_Name\": \"Эстонская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HUF\",\n        \"Cur_ID\": 173,\n        \"Cur_Name\": \"Венгерский форинт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KZT\",\n        \"Cur_ID\": 174,\n        \"Cur_Name\": \"Казахский тенге\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KGS\",\n        \"Cur_ID\": 175,\n        \"Cur_Name\": \"Кыргызский сом\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LVL\",\n        \"Cur_ID\": 176,\n        \"Cur_Name\": \"Латвийский лат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LTL\",\n        \"Cur_ID\": 177,\n        \"Cur_Name\": \"Литовский лит\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MDL\",\n        \"Cur_ID\": 178,\n        \"Cur_Name\": \"Молдавский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ROL\",\n        \"Cur_ID\": 179,\n        \"Cur_Name\": \"Румынский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SKK\",\n        \"Cur_ID\": 180,\n        \"Cur_Name\": \"Словацкая крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TMM\",\n        \"Cur_ID\": 181,\n        \"Cur_Name\": \"Туркменский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TJS\",\n        \"Cur_ID\": 182,\n        \"Cur_Name\": \"Таджикский сомони\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AZM\",\n        \"Cur_ID\": 183,\n        \"Cur_Name\": \"Азербайджанский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AMD\",\n        \"Cur_ID\": 184,\n        \"Cur_Name\": \"Армянский драм\"\n    },\n    {\n        \"Cur_Abbreviation\": \"YUM\",\n        \"Cur_ID\": 186,\n        \"Cur_Name\": \"Югославский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GEL\",\n        \"Cur_ID\": 187,\n        \"Cur_Name\": \"Грузинский лари\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PLN\",\n        \"Cur_ID\": 188,\n        \"Cur_Name\": \"Польский злотый\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BRL\",\n        \"Cur_ID\": 189,\n        \"Cur_Name\": \"Бразильский реал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RUB\",\n        \"Cur_ID\": 190,\n        \"Cur_Name\": \"Российский рубль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BGN\",\n        \"Cur_ID\": 191,\n        \"Cur_Name\": \"Болгарский лев\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UZS\",\n        \"Cur_ID\": 192,\n        \"Cur_Name\": \"Узбекский сум\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AFA\",\n        \"Cur_ID\": 193,\n        \"Cur_Name\": \"Афгани\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BRL\",\n        \"Cur_ID\": 198,\n        \"Cur_Name\": \"Бразильский реал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DEM\",\n        \"Cur_ID\": 200,\n        \"Cur_Name\": \"Немецкая марка\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AFA\",\n        \"Cur_ID\": 201,\n        \"Cur_Name\": \"Афгани\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AFA\",\n        \"Cur_ID\": 206,\n        \"Cur_Name\": \"Афгани\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UYU\",\n        \"Cur_ID\": 207,\n        \"Cur_Name\": \"Уругвайское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PLN\",\n        \"Cur_ID\": 219,\n        \"Cur_Name\": \"Злотый\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TRY\",\n        \"Cur_ID\": 220,\n        \"Cur_Name\": \"Новая турецкая лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HUF\",\n        \"Cur_ID\": 221,\n        \"Cur_Name\": \"Форинт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KZT\",\n        \"Cur_ID\": 222,\n        \"Cur_Name\": \"Тенге\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KGS\",\n        \"Cur_ID\": 223,\n        \"Cur_Name\": \"Сом\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UAH\",\n        \"Cur_ID\": 224,\n        \"Cur_Name\": \"Гривна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EEK\",\n        \"Cur_ID\": 225,\n        \"Cur_Name\": \"Крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AZN\",\n        \"Cur_ID\": 226,\n        \"Cur_Name\": \"Азербайджанский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ALL\",\n        \"Cur_ID\": 227,\n        \"Cur_Name\": \"Лек\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AFN\",\n        \"Cur_ID\": 228,\n        \"Cur_Name\": \"Афгани\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VND\",\n        \"Cur_ID\": 229,\n        \"Cur_Name\": \"Донг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GEL\",\n        \"Cur_ID\": 230,\n        \"Cur_Name\": \"Лари\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LAK\",\n        \"Cur_ID\": 231,\n        \"Cur_Name\": \"Кип\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MNT\",\n        \"Cur_ID\": 232,\n        \"Cur_Name\": \"Тугрик\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NGN\",\n        \"Cur_ID\": 233,\n        \"Cur_Name\": \"Найра\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PEN\",\n        \"Cur_ID\": 234,\n        \"Cur_Name\": \"Новый соль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RON\",\n        \"Cur_ID\": 235,\n        \"Cur_Name\": \"Новый лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TJS\",\n        \"Cur_ID\": 236,\n        \"Cur_Name\": \"Сомони\"\n    },\n    {\n        \"Cur_Abbreviation\": \"THB\",\n        \"Cur_ID\": 237,\n        \"Cur_Name\": \"Бат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ZAR\",\n        \"Cur_ID\": 239,\n        \"Cur_Name\": \"Рэнд\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KRW\",\n        \"Cur_ID\": 240,\n        \"Cur_Name\": \"Вона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VEB\",\n        \"Cur_ID\": 241,\n        \"Cur_Name\": \"Боливар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MYR\",\n        \"Cur_ID\": 244,\n        \"Cur_Name\": \"Малайзийский ринггит\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RSD\",\n        \"Cur_ID\": 245,\n        \"Cur_Name\": \"Сербский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IDR\",\n        \"Cur_ID\": 248,\n        \"Cur_Name\": \"Индонезийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HRK\",\n        \"Cur_ID\": 249,\n        \"Cur_Name\": \"Хорватская куна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CNY\",\n        \"Cur_ID\": 250,\n        \"Cur_Name\": \"Юань Ренминби\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MXN\",\n        \"Cur_ID\": 251,\n        \"Cur_Name\": \"Мексиканское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CNY\",\n        \"Cur_ID\": 254,\n        \"Cur_Name\": \"Китайский юань\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TRY\",\n        \"Cur_ID\": 256,\n        \"Cur_Name\": \"Турецкая лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TMM\",\n        \"Cur_ID\": 257,\n        \"Cur_Name\": \"Манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VEF\",\n        \"Cur_ID\": 259,\n        \"Cur_Name\": \"Боливар фуэрте\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TMT\",\n        \"Cur_ID\": 260,\n        \"Cur_Name\": \"Новый манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SDG\",\n        \"Cur_ID\": 262,\n        \"Cur_Name\": \"Суданский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IRR\",\n        \"Cur_ID\": 264,\n        \"Cur_Name\": \"Иранский риал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GEK\",\n        \"Cur_ID\": 265,\n        \"Cur_Name\": \"Грузинский купон\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LBP\",\n        \"Cur_ID\": 266,\n        \"Cur_Name\": \"Ливанский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TRL\",\n        \"Cur_ID\": 267,\n        \"Cur_Name\": \"Турецкая лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UAK\",\n        \"Cur_ID\": 268,\n        \"Cur_Name\": \"Украинский карбованец\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TJR\",\n        \"Cur_ID\": 269,\n        \"Cur_Name\": \"Таджикский рубль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AMD\",\n        \"Cur_ID\": 270,\n        \"Cur_Name\": \"Армянский драм\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AZM\",\n        \"Cur_ID\": 271,\n        \"Cur_Name\": \"Азербайджанский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ROL\",\n        \"Cur_ID\": 272,\n        \"Cur_Name\": \"Румынский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RON\",\n        \"Cur_ID\": 273,\n        \"Cur_Name\": \"Новый румынский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TMT\",\n        \"Cur_ID\": 274,\n        \"Cur_Name\": \"Новый туркменский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JPY\",\n        \"Cur_ID\": 277,\n        \"Cur_Name\": \"Йена\"\n    },\n    {\n        \"Cur_Abbreviation\": \"XDR\",\n        \"Cur_ID\": 278,\n        \"Cur_Name\": \"СДР (Специальные права заимствования)\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VEF\",\n        \"Cur_ID\": 279,\n        \"Cur_Name\": \"Боливар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IDR\",\n        \"Cur_ID\": 280,\n        \"Cur_Name\": \"Рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MKD\",\n        \"Cur_ID\": 281,\n        \"Cur_Name\": \"Денар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SAR\",\n        \"Cur_ID\": 282,\n        \"Cur_Name\": \"Саудовский риял\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LKR\",\n        \"Cur_ID\": 283,\n        \"Cur_Name\": \"Шри-ланкийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NZD\",\n        \"Cur_ID\": 286,\n        \"Cur_Name\": \"Новозеландский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RON\",\n        \"Cur_ID\": 287,\n        \"Cur_Name\": \"Румынский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HRK\",\n        \"Cur_ID\": 288,\n        \"Cur_Name\": \"Куна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UAH\",\n        \"Cur_ID\": 290,\n        \"Cur_Name\": \"Гривна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DKK\",\n        \"Cur_ID\": 291,\n        \"Cur_Name\": \"Датская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EUR\",\n        \"Cur_ID\": 292,\n        \"Cur_Name\": \"Евро\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PLN\",\n        \"Cur_ID\": 293,\n        \"Cur_Name\": \"Злотый\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ISK\",\n        \"Cur_ID\": 294,\n        \"Cur_Name\": \"Исландская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JPY\",\n        \"Cur_ID\": 295,\n        \"Cur_Name\": \"Йена\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MDL\",\n        \"Cur_ID\": 296,\n        \"Cur_Name\": \"Молдавский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NOK\",\n        \"Cur_ID\": 297,\n        \"Cur_Name\": \"Норвежская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RUB\",\n        \"Cur_ID\": 298,\n        \"Cur_Name\": \"Российский рубль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"XDR\",\n        \"Cur_ID\": 299,\n        \"Cur_Name\": \"СДР (Специальные права заимствования)\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KGS\",\n        \"Cur_ID\": 300,\n        \"Cur_Name\": \"Сом\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KZT\",\n        \"Cur_ID\": 301,\n        \"Cur_Name\": \"Тенге\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TRY\",\n        \"Cur_ID\": 302,\n        \"Cur_Name\": \"Турецкая лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IRR\",\n        \"Cur_ID\": 303,\n        \"Cur_Name\": \"Иранский риал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CNY\",\n        \"Cur_ID\": 304,\n        \"Cur_Name\": \"Китайский юань\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CZK\",\n        \"Cur_ID\": 305,\n        \"Cur_Name\": \"Чешская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SEK\",\n        \"Cur_ID\": 306,\n        \"Cur_Name\": \"Шведская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DZD\",\n        \"Cur_ID\": 307,\n        \"Cur_Name\": \"Алжирский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ARS\",\n        \"Cur_ID\": 308,\n        \"Cur_Name\": \"Аргентинское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AFN\",\n        \"Cur_ID\": 309,\n        \"Cur_Name\": \"Афгани\"\n    },\n    {\n        \"Cur_Abbreviation\": \"THB\",\n        \"Cur_ID\": 310,\n        \"Cur_Name\": \"Бат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VEF\",\n        \"Cur_ID\": 311,\n        \"Cur_Name\": \"Боливар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BRL\",\n        \"Cur_ID\": 312,\n        \"Cur_Name\": \"Бразильский реал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KRW\",\n        \"Cur_ID\": 313,\n        \"Cur_Name\": \"Вона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HKD\",\n        \"Cur_ID\": 314,\n        \"Cur_Name\": \"Гонконгский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MKD\",\n        \"Cur_ID\": 315,\n        \"Cur_Name\": \"Денар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AED\",\n        \"Cur_ID\": 316,\n        \"Cur_Name\": \"Дирхам ОАЭ\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VND\",\n        \"Cur_ID\": 317,\n        \"Cur_Name\": \"Донг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EGP\",\n        \"Cur_ID\": 318,\n        \"Cur_Name\": \"Египетский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"INR\",\n        \"Cur_ID\": 319,\n        \"Cur_Name\": \"Индийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IQD\",\n        \"Cur_ID\": 320,\n        \"Cur_Name\": \"Иракcкий динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KES\",\n        \"Cur_ID\": 321,\n        \"Cur_Name\": \"Кенийский шиллинг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LAK\",\n        \"Cur_ID\": 322,\n        \"Cur_Name\": \"Кип\"\n    },\n    {\n        \"Cur_Abbreviation\": \"COP\",\n        \"Cur_ID\": 323,\n        \"Cur_Name\": \"Колумбийское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HRK\",\n        \"Cur_ID\": 324,\n        \"Cur_Name\": \"Куна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GEL\",\n        \"Cur_ID\": 325,\n        \"Cur_Name\": \"Лари\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ALL\",\n        \"Cur_ID\": 326,\n        \"Cur_Name\": \"Лек\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MYR\",\n        \"Cur_ID\": 327,\n        \"Cur_Name\": \"Малайзийский ринггит\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MAD\",\n        \"Cur_ID\": 328,\n        \"Cur_Name\": \"Марокканский дирхам\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MXN\",\n        \"Cur_ID\": 329,\n        \"Cur_Name\": \"Мексиканское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NGN\",\n        \"Cur_ID\": 330,\n        \"Cur_Name\": \"Найра\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NPR\",\n        \"Cur_ID\": 331,\n        \"Cur_Name\": \"Непальcкая рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ILS\",\n        \"Cur_ID\": 332,\n        \"Cur_Name\": \"Новый израильский шекель\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PEN\",\n        \"Cur_ID\": 333,\n        \"Cur_Name\": \"Соль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TWD\",\n        \"Cur_ID\": 334,\n        \"Cur_Name\": \"Новый тайваньский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TMT\",\n        \"Cur_ID\": 335,\n        \"Cur_Name\": \"Новый туркменский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PKR\",\n        \"Cur_ID\": 336,\n        \"Cur_Name\": \"Пакистанская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RON\",\n        \"Cur_ID\": 337,\n        \"Cur_Name\": \"Румынский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IDR\",\n        \"Cur_ID\": 338,\n        \"Cur_Name\": \"Рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ZAR\",\n        \"Cur_ID\": 339,\n        \"Cur_Name\": \"Рэнд\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SAR\",\n        \"Cur_ID\": 340,\n        \"Cur_Name\": \"Саудовский риял\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RSD\",\n        \"Cur_ID\": 341,\n        \"Cur_Name\": \"Сербский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SYP\",\n        \"Cur_ID\": 342,\n        \"Cur_Name\": \"Сирийский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TJS\",\n        \"Cur_ID\": 343,\n        \"Cur_Name\": \"Сомони\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SDG\",\n        \"Cur_ID\": 344,\n        \"Cur_Name\": \"Суданский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UZS\",\n        \"Cur_ID\": 345,\n        \"Cur_Name\": \"Узбекский сум\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UYU\",\n        \"Cur_ID\": 346,\n        \"Cur_Name\": \"Уругвайское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PHP\",\n        \"Cur_ID\": 347,\n        \"Cur_Name\": \"Филиппинcкое песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HUF\",\n        \"Cur_ID\": 348,\n        \"Cur_Name\": \"Форинт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LKR\",\n        \"Cur_ID\": 349,\n        \"Cur_Name\": \"Шри-ланкийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ETB\",\n        \"Cur_ID\": 350,\n        \"Cur_Name\": \"Эфиопский быр\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TND\",\n        \"Cur_ID\": 351,\n        \"Cur_Name\": \"Тунисский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LAK\",\n        \"Cur_ID\": 352,\n        \"Cur_Name\": \"Лаосский кип\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AZN\",\n        \"Cur_ID\": 353,\n        \"Cur_Name\": \"Азербайджанский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VES\",\n        \"Cur_ID\": 354,\n        \"Cur_Name\": \"Суверенный боливар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JPY\",\n        \"Cur_ID\": 355,\n        \"Cur_Name\": \"Иена\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VES\",\n        \"Cur_ID\": 356,\n        \"Cur_Name\": \"Суверенный боливар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CAD\",\n        \"Cur_ID\": 371,\n        \"Cur_Name\": \"Канадский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CLP\",\n        \"Cur_ID\": 374,\n        \"Cur_Name\": \"Чилийское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JOD\",\n        \"Cur_ID\": 392,\n        \"Cur_Name\": \"Иорданский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KWD\",\n        \"Cur_ID\": 394,\n        \"Cur_Name\": \"Кувейтский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LBP\",\n        \"Cur_ID\": 395,\n        \"Cur_Name\": \"Ливанский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LYD\",\n        \"Cur_ID\": 398,\n        \"Cur_Name\": \"Ливийcкий динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SGD\",\n        \"Cur_ID\": 421,\n        \"Cur_Name\": \"Сингапурcкий доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CHF\",\n        \"Cur_ID\": 426,\n        \"Cur_Name\": \"Швейцарский франк\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GBP\",\n        \"Cur_ID\": 429,\n        \"Cur_Name\": \"Фунт стерлингов\"\n    },\n    {\n        \"Cur_Abbreviation\": \"USD\",\n        \"Cur_ID\": 431,\n        \"Cur_Name\": \"Доллар США\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AUD\",\n        \"Cur_ID\": 440,\n        \"Cur_Name\": \"Австралийский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BGN\",\n        \"Cur_ID\": 441,\n        \"Cur_Name\": \"Болгарский лев\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MNT\",\n        \"Cur_ID\": 446,\n        \"Cur_Name\": \"Тугрик\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NZD\",\n        \"Cur_ID\": 448,\n        \"Cur_Name\": \"Новозеландский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UAH\",\n        \"Cur_ID\": 449,\n        \"Cur_Name\": \"Гривна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DKK\",\n        \"Cur_ID\": 450,\n        \"Cur_Name\": \"Датская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EUR\",\n        \"Cur_ID\": 451,\n        \"Cur_Name\": \"Евро\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PLN\",\n        \"Cur_ID\": 452,\n        \"Cur_Name\": \"Злотый\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ISK\",\n        \"Cur_ID\": 453,\n        \"Cur_Name\": \"Исландская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MDL\",\n        \"Cur_ID\": 454,\n        \"Cur_Name\": \"Молдавский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NOK\",\n        \"Cur_ID\": 455,\n        \"Cur_Name\": \"Норвежская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RUB\",\n        \"Cur_ID\": 456,\n        \"Cur_Name\": \"Российский рубль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"XDR\",\n        \"Cur_ID\": 457,\n        \"Cur_Name\": \"СДР (Специальные права заимствования)\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KGS\",\n        \"Cur_ID\": 458,\n        \"Cur_Name\": \"Сом\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KZT\",\n        \"Cur_ID\": 459,\n        \"Cur_Name\": \"Тенге\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TRY\",\n        \"Cur_ID\": 460,\n        \"Cur_Name\": \"Турецкая лира\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IRR\",\n        \"Cur_ID\": 461,\n        \"Cur_Name\": \"Иранский риал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CNY\",\n        \"Cur_ID\": 462,\n        \"Cur_Name\": \"Китайский юань\"\n    },\n    {\n        \"Cur_Abbreviation\": \"CZK\",\n        \"Cur_ID\": 463,\n        \"Cur_Name\": \"Чешская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SEK\",\n        \"Cur_ID\": 464,\n        \"Cur_Name\": \"Шведская крона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"DZD\",\n        \"Cur_ID\": 465,\n        \"Cur_Name\": \"Алжирский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ARS\",\n        \"Cur_ID\": 466,\n        \"Cur_Name\": \"Аргентинское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AFN\",\n        \"Cur_ID\": 467,\n        \"Cur_Name\": \"Афгани\"\n    },\n    {\n        \"Cur_Abbreviation\": \"THB\",\n        \"Cur_ID\": 468,\n        \"Cur_Name\": \"Бат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"BRL\",\n        \"Cur_ID\": 469,\n        \"Cur_Name\": \"Бразильский реал\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KRW\",\n        \"Cur_ID\": 470,\n        \"Cur_Name\": \"Вона\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HKD\",\n        \"Cur_ID\": 471,\n        \"Cur_Name\": \"Гонконгский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MKD\",\n        \"Cur_ID\": 472,\n        \"Cur_Name\": \"Денар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AED\",\n        \"Cur_ID\": 473,\n        \"Cur_Name\": \"Дирхам ОАЭ\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VND\",\n        \"Cur_ID\": 474,\n        \"Cur_Name\": \"Донг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"EGP\",\n        \"Cur_ID\": 475,\n        \"Cur_Name\": \"Египетский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"INR\",\n        \"Cur_ID\": 476,\n        \"Cur_Name\": \"Индийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IQD\",\n        \"Cur_ID\": 477,\n        \"Cur_Name\": \"Иракcкий динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"KES\",\n        \"Cur_ID\": 478,\n        \"Cur_Name\": \"Кенийский шиллинг\"\n    },\n    {\n        \"Cur_Abbreviation\": \"COP\",\n        \"Cur_ID\": 479,\n        \"Cur_Name\": \"Колумбийское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HRK\",\n        \"Cur_ID\": 480,\n        \"Cur_Name\": \"Куна\"\n    },\n    {\n        \"Cur_Abbreviation\": \"GEL\",\n        \"Cur_ID\": 481,\n        \"Cur_Name\": \"Лари\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ALL\",\n        \"Cur_ID\": 482,\n        \"Cur_Name\": \"Лек\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MYR\",\n        \"Cur_ID\": 483,\n        \"Cur_Name\": \"Малайзийский ринггит\"\n    },\n    {\n        \"Cur_Abbreviation\": \"MXN\",\n        \"Cur_ID\": 484,\n        \"Cur_Name\": \"Мексиканское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NGN\",\n        \"Cur_ID\": 485,\n        \"Cur_Name\": \"Найра\"\n    },\n    {\n        \"Cur_Abbreviation\": \"NPR\",\n        \"Cur_ID\": 486,\n        \"Cur_Name\": \"Непальcкая рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ILS\",\n        \"Cur_ID\": 487,\n        \"Cur_Name\": \"Новый израильский шекель\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PEN\",\n        \"Cur_ID\": 488,\n        \"Cur_Name\": \"Соль\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TWD\",\n        \"Cur_ID\": 489,\n        \"Cur_Name\": \"Новый тайваньский доллар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TMT\",\n        \"Cur_ID\": 490,\n        \"Cur_Name\": \"Новый туркменский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PKR\",\n        \"Cur_ID\": 491,\n        \"Cur_Name\": \"Пакистанская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RON\",\n        \"Cur_ID\": 492,\n        \"Cur_Name\": \"Румынский лей\"\n    },\n    {\n        \"Cur_Abbreviation\": \"IDR\",\n        \"Cur_ID\": 493,\n        \"Cur_Name\": \"Рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"ZAR\",\n        \"Cur_ID\": 494,\n        \"Cur_Name\": \"Рэнд\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SAR\",\n        \"Cur_ID\": 495,\n        \"Cur_Name\": \"Саудовский риял\"\n    },\n    {\n        \"Cur_Abbreviation\": \"RSD\",\n        \"Cur_ID\": 496,\n        \"Cur_Name\": \"Сербский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SYP\",\n        \"Cur_ID\": 497,\n        \"Cur_Name\": \"Сирийский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TJS\",\n        \"Cur_ID\": 498,\n        \"Cur_Name\": \"Сомони\"\n    },\n    {\n        \"Cur_Abbreviation\": \"SDG\",\n        \"Cur_ID\": 499,\n        \"Cur_Name\": \"Суданский фунт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UZS\",\n        \"Cur_ID\": 500,\n        \"Cur_Name\": \"Узбекский сум\"\n    },\n    {\n        \"Cur_Abbreviation\": \"UYU\",\n        \"Cur_ID\": 501,\n        \"Cur_Name\": \"Уругвайское песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"PHP\",\n        \"Cur_ID\": 502,\n        \"Cur_Name\": \"Филиппинcкое песо\"\n    },\n    {\n        \"Cur_Abbreviation\": \"HUF\",\n        \"Cur_ID\": 503,\n        \"Cur_Name\": \"Форинт\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LKR\",\n        \"Cur_ID\": 504,\n        \"Cur_Name\": \"Шри-ланкийская рупия\"\n    },\n    {\n        \"Cur_Abbreviation\": \"TND\",\n        \"Cur_ID\": 505,\n        \"Cur_Name\": \"Тунисский динар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"LAK\",\n        \"Cur_ID\": 506,\n        \"Cur_Name\": \"Лаосский кип\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AZN\",\n        \"Cur_ID\": 507,\n        \"Cur_Name\": \"Азербайджанский манат\"\n    },\n    {\n        \"Cur_Abbreviation\": \"JPY\",\n        \"Cur_ID\": 508,\n        \"Cur_Name\": \"Иена\"\n    },\n    {\n        \"Cur_Abbreviation\": \"VES\",\n        \"Cur_ID\": 509,\n        \"Cur_Name\": \"Суверенный боливар\"\n    },\n    {\n        \"Cur_Abbreviation\": \"AMD\",\n        \"Cur_ID\": 510,\n        \"Cur_Name\": \"Армянский драм\"\n    }\n]"
				}
			]
		},
		{
			"name": "#7 curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Проверка статус кода 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json(); \r",
							"\r",
							"//2. Проверка структуры Json в ответе\r",
							"let shema = {\r",
							"    \"type\" : \"object\",\r",
							"    \"required\" : [\"Cur_Abbreviation\", \"Cur_ID\", \"Cur_Name\", \"Cur_OfficialRate\", \"Cur_Scale\", \"Date\"],\r",
							"    \"properties\" : {\r",
							"        \"Cur_Abbreviation\" : {\"type\" : \"string\"},\r",
							"        \"Cur_ID\" : {\"type\" : \"integer\"},\r",
							"        \"Cur_Name\" : {\"type\" : \"string\"},\r",
							"        \"Cur_OfficialRate\" : {\"type\" : \"number\"},\r",
							"        \"Cur_Scale\" : {\"type\" : \"integer\"},\r",
							"        \"Date\" : {\"type\" : \"string\"}\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test('JSON shema is valid', () => {pm.response.to.have.jsonSchema(shema);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{curr_code}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/curr_byn",
					"host": [
						"{{url}}"
					],
					"path": [
						"curr_byn"
					]
				}
			},
			"response": [
				{
					"name": "#7 curr_byn",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "431",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "178"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Aug 2021 18:52:00 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"Cur_Abbreviation\": \"USD\",\n    \"Cur_ID\": 431,\n    \"Cur_Name\": \"Доллар США\",\n    \"Cur_OfficialRate\": 2.5118,\n    \"Cur_Scale\": 1,\n    \"Date\": \"2021-08-13T00:00:00\"\n}"
				}
			]
		}
	]
}